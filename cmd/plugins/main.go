package main

import (
	"flag"
	"fmt"
	"os"
)

var (
	packageName   string
	pluginsFolder string
)

func main() {
	flag.StringVar(&packageName, "pkg", "github.com/umputun/reproxy", "reproxy package name")
	flag.StringVar(&pluginsFolder, "folder", "plugins", "plugins folder path")
	flag.Parse()

	if packageName == "" || pluginsFolder == "" {
		flag.Usage()
		os.Exit(1)
	}

	entries, errLoadDir := os.ReadDir(pluginsFolder)
	if errLoadDir != nil {
		fmt.Printf("error loading plugins folder: %s\n", errLoadDir)
		os.Exit(1)
	}

	var plugins []string

	for _, entry := range entries {
		if !entry.IsDir() {
			continue
		}
		plugins = append(plugins, entry.Name())
	}

	s := "// GENERATED BY cmd/plugins DO NOT EDIT!\n\npackage proxy\n"

	if len(plugins) > 0 {
		s += "\nimport(\n"
		for idx, plugin := range plugins {
			fmt.Printf("add plugin: %s\n", plugin)
			s += fmt.Sprintf("\tp%d \"%s/%s/%s\"\n", idx, packageName, pluginsFolder, plugin)
		}
		s += ")\n\nfunc init() {\n"
		for idx := range plugins {
			s += fmt.Sprintf("\tp%d.InitPlugin()\n", idx)
		}
		s += "}\n"
	} else {
		fmt.Printf("no plugins found in %s\n", pluginsFolder)
	}

	errWrite := os.WriteFile("app/proxy/plugins.go", []byte(s), 0644)
	if errWrite != nil {
		fmt.Printf("error writing plugins.go: %s\n", errWrite)
		os.Exit(1)
	}
}
